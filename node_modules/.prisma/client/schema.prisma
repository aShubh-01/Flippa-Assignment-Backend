// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  buyer
  seller
  admin
}

enum AssetStatus {
  active
  sold
  closed
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(buyer)
  createdAt DateTime @default(now())

  assets            Asset[]
  bids              Bid[]
  transactionSold   Transaction[] @relation("seller")
  transactionBought Transaction[] @relation("buyer")
}

model Asset {
  id            Int         @id @default(autoincrement())
  title         String
  description   String
  startingPrice Int
  currentPrice  Int
  status        AssetStatus @default(active)

  sellerId Int
  seller   User @relation(references: [id], fields: [sellerId])

  bids         Bid[]
  transactions Transaction[]
}

model Bid {
  id        Int      @id @default(autoincrement())
  bidAmount Int
  bidTime   DateTime @default(now())

  userId Int
  users  User @relation(references: [id], fields: [userId])

  assetId Int
  assets  Asset @relation(references: [id], fields: [assetId])
}

model Transaction {
  id        Int      @id @default(autoincrement())
  salePrice Int
  saleDate  DateTime

  sellerId Int
  seller   User @relation("seller", references: [id], fields: [sellerId])

  buyerId Int
  buyer   User @relation("buyer", references: [id], fields: [buyerId])

  assetId Int
  asset   Asset @relation(references: [id], fields: [assetId])
}
